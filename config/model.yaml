# config.yaml

# General Project Configuration
project:
  name: Insurance Premium Prediction
  version: 1.1
  description: "Predict insurance expenses based on demographic and health data."
  author: "Madhuri"
  date_created: "2024-09-06"

# Data Configuration
data:
  train_data_path: "C:/Users/madhu/pendrive/myfiles/Data science Pro/insurance premium prediction/data/train.csv"
  test_data_path: "C:/Users/madhu/pendrive/myfiles/Data science Pro/insurance premium prediction/data/test.csv"
  target_column: "expenses"
  features:
    numerical_features:
      - age
      - bmi
      - children
    categorical_features:
      - sex
      - smoker
      - region

# Data Preprocessing Configuration
preprocessing:
  missing_value_strategy: "mean"
  scaling_method: "min_max_scaler"
  encoding_method: "one_hot"

# Models Configuration
model_selection:
  model:
    linear_regression:
      search_param_grid:
        copy_X: [True,False] 
        fit_intercept: [True,False] 
        n_jobs: [1,5,10,None]
        positive: [True,False]
    
    lasso_regression:
      search_param_grid:
        alpha: [0.1,10,1]


    ridge_regression:
      search_param_grid:
        alpha: [0.1,1,1e-15, 1e-10]

    xgboost_regressor:
      search_param_grid:
        max_depth: [3,5,7,9,10]
        max_leaf_nodes: [5,6,7,9]
        n_estimators: [100, 200, 500]
        learning_rate: [0.01, 0.1]


      

    adaboost_regressor:
      search_param_grid:
        n_estimators: [50,100,150,200]
        learning_rate: [1,3,5,7]
        random_state: 42

      

    gradient_boosting_regression:
      search_param_grid:
        n_estimators: [100,300,400]
        learning_rate: [0.1,1.0,10.0]
        max_depth: [3,5,7,9]
        random_state: [1,42,100]
          
    random_forest_regression:
      search_param_grid:
        n_estimators: [100,200,600]
        max_depth: [5,10,13]
        random_state: 42
    
    knnregressor:
      search_param_grid:
        n_neighbors: [3,5,7,9]
        p: 2



# Hyperparameter Tuning Configuration
hyperparameter_tuning:
  enabled: true
  method: "grid_search"
  parameters:
    n_estimators: [50, 100, 200]
    max_depth: [5, 10, 20]
    max_features: ["auto", "sqrt"]
    min_samples_split: [2, 5, 10]
    min_samples_leaf: [1, 2, 4]

# Training Configuration
training:
  test_size: 0.2
  random_state: 42
  cross_validation_folds: 5
  metrics:
    - "mean_absolute_error"
    - "root_mean_squared_error"
    - "r2_score"

# Evaluation Configuration
evaluation:
  test_size: 0.2
  metrics:
    - "mean_absolute_error"
    - "root_mean_squared_error"
    - "r2_score"

# Output Configuration
output:
  model_save_path: "models/insurance_premium_model.pkl"
  logs_path: "logs/train.log"
  reports_path: "reports/performance_report.csv"
